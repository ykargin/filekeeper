# FileKeeper CI/CD Workflow
name: filekeeper

on:
  push:
    branches: [ "main", "dev" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up Go modules
      run: |
        go mod init github.com/ykargin/filekeeper
        go mod tidy

    - name: Install dependencies
      run: go get -v gopkg.in/yaml.v3

    - name: Run tests
      run: go test -v . -coverprofile=coverage.txt -covermode=atomic

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up Go modules
      run: |
        go mod init github.com/ykargin/filekeeper
        go mod tidy

    - name: Install dependencies
      run: go get -v gopkg.in/yaml.v3

    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [amd64, arm, arm64]
        include:
          - arch: amd64
            goarch: amd64
            artifact_name: filekeeper-linux-amd64
          - arch: arm
            goarch: arm
            goarm: 7
            artifact_name: filekeeper-linux-arm-v7
          - arch: arm64
            goarch: arm64
            artifact_name: filekeeper-linux-arm64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Debug info
      run: |
        echo "GitHub ref: ${{ github.ref }}"
        echo "GitHub event name: ${{ github.event_name }}"
        echo "Is tag: ${{ startsWith(github.ref, 'refs/tags/') }}"
        echo "Building for architecture: ${{ matrix.arch }}"

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up Go modules
      run: |
        go mod init github.com/ykargin/filekeeper
        go mod tidy

    - name: Install dependencies
      run: go get -v gopkg.in/yaml.v3

    - name: Build for ${{ matrix.arch }}
      env:
        GOOS: linux
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: go build -v -o ${{ matrix.artifact_name }} .

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    # We only create a release for tagged pushes
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Release Info
        run: |
          echo "Creating release for tag: ${{ github.ref_name }}"
          echo "Full ref: ${{ github.ref }}"

      # Download all architecture artifacts
      - name: Download AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: filekeeper-linux-amd64
          path: ./artifacts

      - name: Download ARM v7 artifact
        uses: actions/download-artifact@v4
        with:
          name: filekeeper-linux-arm-v7
          path: ./artifacts

      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: filekeeper-linux-arm64
          path: ./artifacts

      - name: List files
        run: ls -la ./artifacts/

      - name: Make binaries executable
        run: |
          chmod +x ./artifacts/filekeeper-linux-amd64
          chmod +x ./artifacts/filekeeper-linux-arm-v7
          chmod +x ./artifacts/filekeeper-linux-arm64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/filekeeper-linux-amd64
            ./artifacts/filekeeper-linux-arm-v7
            ./artifacts/filekeeper-linux-arm64
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
